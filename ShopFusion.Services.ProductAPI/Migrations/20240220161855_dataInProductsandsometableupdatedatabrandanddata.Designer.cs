// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShopFusion.Services.ProductAPI.Data;

#nullable disable

namespace ShopFusion.Services.ProductAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240220161855_dataInProductsandsometableupdatedatabrandanddata")]
    partial class dataInProductsandsometableupdatedatabrandanddata
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ShopFusion.Services.ProductAPI.Models.Brands", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandName = "Nature Land",
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2024, 2, 20, 21, 48, 54, 498, DateTimeKind.Local).AddTicks(6012),
                            IsActive = true
                        },
                        new
                        {
                            Id = 2,
                            BrandName = "Fortune",
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2024, 2, 20, 21, 48, 54, 498, DateTimeKind.Local).AddTicks(6072),
                            IsActive = true
                        },
                        new
                        {
                            Id = 3,
                            BrandName = "Patanjali",
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2024, 2, 20, 21, 48, 54, 498, DateTimeKind.Local).AddTicks(6144),
                            IsActive = true
                        },
                        new
                        {
                            Id = 4,
                            BrandName = "Fortune",
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2024, 2, 20, 21, 48, 54, 498, DateTimeKind.Local).AddTicks(6198),
                            IsActive = true
                        },
                        new
                        {
                            Id = 5,
                            BrandName = "Saffola",
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2024, 2, 20, 21, 48, 54, 498, DateTimeKind.Local).AddTicks(6254),
                            IsActive = true
                        },
                        new
                        {
                            Id = 6,
                            BrandName = "Gowardhan",
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2024, 2, 20, 21, 48, 54, 498, DateTimeKind.Local).AddTicks(6323),
                            IsActive = true
                        });
                });

            modelBuilder.Entity("ShopFusion.Services.ProductAPI.Models.Categories", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("MainCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryName = "Dal's & Pulses",
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2024, 2, 20, 21, 48, 54, 498, DateTimeKind.Local).AddTicks(6382),
                            IsActive = true,
                            MainCategoryId = 1
                        },
                        new
                        {
                            Id = 2,
                            CategoryName = "Ghee & Oils",
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2024, 2, 20, 21, 48, 54, 498, DateTimeKind.Local).AddTicks(6435),
                            IsActive = true,
                            MainCategoryId = 1
                        },
                        new
                        {
                            Id = 3,
                            CategoryName = "Atta & Flours",
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2024, 2, 20, 21, 48, 54, 498, DateTimeKind.Local).AddTicks(6484),
                            IsActive = true,
                            MainCategoryId = 1
                        });
                });

            modelBuilder.Entity("ShopFusion.Services.ProductAPI.Models.MainCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MainCategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("MainCategory");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2024, 2, 20, 21, 48, 54, 498, DateTimeKind.Local).AddTicks(5886),
                            IsActive = true,
                            MainCategoryName = "Staples"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2024, 2, 20, 21, 48, 54, 498, DateTimeKind.Local).AddTicks(5949),
                            IsActive = true,
                            MainCategoryName = "Snacks & Beverages"
                        });
                });

            modelBuilder.Entity("ShopFusion.Services.ProductAPI.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("MainCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ProductDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ProductPrice")
                        .HasColumnType("float");

                    b.Property<int>("SubCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandId = 1,
                            CategoryId = 1,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2024, 2, 20, 21, 48, 54, 498, DateTimeKind.Local).AddTicks(5692),
                            IsActive = true,
                            MainCategoryId = 1,
                            ProductDescription = "",
                            ProductImage = "https://rukminim2.flixcart.com/image/416/416/ke7ff680/pulses/z/m/x/500-kabuli-chana-kabuli-chana-natureland-organics-original-imafuy3hfkx4qw7d.jpeg?q=70",
                            ProductName = "Natureland Organics Kabuli Chana (Kabuli Buta) (Whole)  (500 g)",
                            ProductPrice = 126.0,
                            SubCategoryId = 1
                        },
                        new
                        {
                            Id = 2,
                            BrandId = 1,
                            CategoryId = 1,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2024, 2, 20, 21, 48, 54, 498, DateTimeKind.Local).AddTicks(5816),
                            IsActive = true,
                            MainCategoryId = 1,
                            ProductDescription = "",
                            ProductImage = "https://rukminim2.flixcart.com/image/416/416/kqpj4i80/pulses/r/a/z/1-arhar-dal-arhar-dal-natureland-organics-original-imag4npb8twt4dwz.jpeg?q=70",
                            ProductName = "Natureland Organics Yellow Toor/Arhar Dal (Harada Dali) (Split)  (1 kg)",
                            ProductPrice = 1299.0,
                            SubCategoryId = 1
                        },
                        new
                        {
                            Id = 3,
                            BrandId = 2,
                            CategoryId = 1,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2024, 2, 20, 21, 48, 54, 498, DateTimeKind.Local).AddTicks(6881),
                            IsActive = true,
                            MainCategoryId = 1,
                            ProductDescription = "",
                            ProductImage = "https://rukminim2.flixcart.com/image/416/416/xif0q/pulses/g/4/h/-original-imagpgzhcvgcyaxg.jpeg?q=70",
                            ProductName = "Tata Sampann White Urad Dal (Biri Dali) (Whole)  (1 kg)",
                            ProductPrice = 200.0,
                            SubCategoryId = 2
                        },
                        new
                        {
                            Id = 4,
                            BrandId = 2,
                            CategoryId = 1,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2024, 2, 20, 21, 48, 54, 498, DateTimeKind.Local).AddTicks(6936),
                            IsActive = true,
                            MainCategoryId = 1,
                            ProductDescription = "",
                            ProductImage = "https://rukminim2.flixcart.com/image/416/416/xif0q/pulses/0/g/n/-original-imagsy58yzw47w8f.jpeg?q=70",
                            ProductName = "Natureland Organics Urad Dal (Biri Dali) (Split)  (1 kg)",
                            ProductPrice = 200.0,
                            SubCategoryId = 2
                        },
                        new
                        {
                            Id = 5,
                            BrandId = 3,
                            CategoryId = 3,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2024, 2, 20, 21, 48, 54, 498, DateTimeKind.Local).AddTicks(6988),
                            IsActive = true,
                            MainCategoryId = 1,
                            ProductDescription = "",
                            ProductImage = "https://rukminim2.flixcart.com/image/280/280/xif0q/flour/d/u/z/-original-imagwhtwwm2ksbxe.jpeg?q=70",
                            ProductName = "PATANJALI Chakki Atta, Whole Wheat with Bran, Genhu ka Atta, Organic Flour (Whole-Gehuro otta)  (5 kg)",
                            ProductPrice = 222.0,
                            SubCategoryId = 3
                        },
                        new
                        {
                            Id = 6,
                            BrandId = 4,
                            CategoryId = 3,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2024, 2, 20, 21, 48, 54, 498, DateTimeKind.Local).AddTicks(7045),
                            IsActive = true,
                            MainCategoryId = 1,
                            ProductDescription = "",
                            ProductImage = "https://rukminim2.flixcart.com/image/416/416/kqidx8w0/flour/h/s/p/chakki-fresh-atta-whole-wheat-flour-fortune-original-imag4gb3ggvam3fg.jpeg?q=70",
                            ProductName = "Fortune Chakki Fresh Atta (Whole-Gehuro otta)  (10 kg)",
                            ProductPrice = 405.0,
                            SubCategoryId = 4
                        },
                        new
                        {
                            Id = 7,
                            BrandId = 5,
                            CategoryId = 2,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2024, 2, 20, 21, 48, 54, 498, DateTimeKind.Local).AddTicks(7096),
                            IsActive = true,
                            MainCategoryId = 1,
                            ProductDescription = "",
                            ProductImage = "https://rukminim2.flixcart.com/image/416/416/xif0q/edible-oil/g/g/k/-original-imaghuf2t32wgzhe.jpeg?q=70",
                            ProductName = "Saffola Gold Refined Cooking Rice Bran & Corn Blended Oil Pouch (Mishrita Tela)  (1 L)",
                            ProductPrice = 170.0,
                            SubCategoryId = 5
                        },
                        new
                        {
                            Id = 8,
                            BrandId = 6,
                            CategoryId = 2,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2024, 2, 20, 21, 48, 54, 498, DateTimeKind.Local).AddTicks(7147),
                            IsActive = true,
                            MainCategoryId = 1,
                            ProductDescription = "",
                            ProductImage = "https://rukminim2.flixcart.com/image/416/416/xif0q/ghee/x/9/q/750-cow-1-pouch-gowardhan-original-imagvp7fntadfgrx.jpeg?q=70",
                            ProductName = "Gowardhan Pure Cow Ghee 750 ml Pouch",
                            ProductPrice = 439.0,
                            SubCategoryId = 6
                        });
                });

            modelBuilder.Entity("ShopFusion.Services.ProductAPI.Models.SubCategories", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("MainCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("SubCategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("SubCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2024, 2, 20, 21, 48, 54, 498, DateTimeKind.Local).AddTicks(6544),
                            IsActive = true,
                            MainCategoryId = 1,
                            SubCategoryName = "Toor Daal"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2024, 2, 20, 21, 48, 54, 498, DateTimeKind.Local).AddTicks(6606),
                            IsActive = true,
                            MainCategoryId = 1,
                            SubCategoryName = "Urad Daal"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2024, 2, 20, 21, 48, 54, 498, DateTimeKind.Local).AddTicks(6660),
                            IsActive = true,
                            MainCategoryId = 1,
                            SubCategoryName = "Wheat Atta"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 3,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2024, 2, 20, 21, 48, 54, 498, DateTimeKind.Local).AddTicks(6713),
                            IsActive = true,
                            MainCategoryId = 1,
                            SubCategoryName = "Rava & Sooji"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 2,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2024, 2, 20, 21, 48, 54, 498, DateTimeKind.Local).AddTicks(6766),
                            IsActive = true,
                            MainCategoryId = 1,
                            SubCategoryName = "Blended Oil"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 2,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2024, 2, 20, 21, 48, 54, 498, DateTimeKind.Local).AddTicks(6823),
                            IsActive = true,
                            MainCategoryId = 1,
                            SubCategoryName = "Ghee"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
